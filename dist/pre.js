import{a as b,b as _,c as u,d as f}from"./chunk-XJMICREQ.js";import{c as h,e as w}from"./chunk-UJFNRH2W.js";var t=h(w(),1),e=h(b(),1),g=h(_(),1);import d from"node:process";import v from"node:util";async function S(){let r=t.getInput("slack-bot-token")||d.env.SLACK_BOT_TOKEN,c=t.getInput("slack-ts"),s=t.getInput("slack-channel-id")||d.env.SLACK_CHANNEL_ID,E=t.getInput("status",{required:!0}),p=t.getInput("github-token",{required:!0}),m=(0,e.getOctokit)(p),n=new g.WebClient(r);if(!r)throw new Error("Missing input slack-bot-token or environment variable SLACK_BOT_TOKEN");if(!s)throw new Error("Missing input slack-channel-id or environment variable SLACK_CHANNEL_ID");if(c){let{mainBlock:i,threadBlock:l,jobLabel:k}=await u(m,e.context),[o,a]=await Promise.all([n.chat.update({channel:s,ts:c,text:e.context.workflow,blocks:[f(e.context),i]}),n.chat.postMessage({channel:s,thread_ts:c,text:k,unfurl_links:!1,blocks:[l]})]);if(!a.ts)throw new Error("did not get slack thread ts");t.saveState("slack-ts",o.ts),t.saveState("slack-thread-ts",a.ts)}else{let{mainBlock:i,threadBlock:l,jobLabel:k}=await u(m,e.context),o=await n.chat.postMessage({channel:s,text:e.context.workflow,unfurl_links:!1,blocks:[f(e.context),i]});if(!o.ts)throw new Error("Did not get slack ts");let a=await n.chat.postMessage({channel:s,thread_ts:o.ts,text:k,unfurl_links:!1,blocks:[l]});if(!a.ts)throw new Error("did not get slack thread ts");t.saveState("slack-ts",o.ts),t.saveState("slack-thread-ts",a.ts)}}S().catch(r=>{t.error(`ksmithut/slack-stream-action: ${v.formatWithOptions({depth:3},r)}`)});export{S as run};
