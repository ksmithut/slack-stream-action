import{a as b,b as d}from"./chunk-PFWPZI57.js";import{c as n,e as h}from"./chunk-UJFNRH2W.js";var o=n(h(),1),t=n(b(),1),p=n(d(),1);import i from"node:process";import f from"node:util";async function _(){let e=o.getInput("slack-bot-token")||i.env.SLACK_BOT_TOKEN,a=o.getInput("slack-ts"),c=o.getInput("slack-channel-id"),g=o.getInput("status",{required:!0}),k=o.getInput("github-token",{required:!0}),u=(0,t.getOctokit)(k),m=new p.WebClient(e);if(!e)throw new Error("Missing input slack-bot-token or environment variable SLACK_BOT_TOKEN");if(a)o.saveState("slack-ts",a);else if(c){let w=await u.paginate(u.rest.actions.listJobsForWorkflowRunAttempt,{...t.context.repo,run_id:t.context.runId,attempt_number:Number.parseInt(i.env.GITHUB_RUN_ATTEMPT||"1",10)}),r=[{label:"Author",url:`https://github.com/${t.context.actor}`,value:t.context.actor},{label:"Workflow Run",url:`https://github.com/${t.context.repo.owner}/${t.context.repo.repo}/actions/runs/${t.context.runId}`,value:t.context.workflow}];t.context.payload.repository?.html_url&&r.push({label:"Repo",url:t.context.payload.repository.html_url,value:t.context.payload.repository.name}),t.context.payload.pull_request?.html_url&&r.push({label:"PR",url:t.context.payload.pull_request.html_url,value:`#${t.context.payload.pull_request.number}`});let l=await m.chat.postMessage({channel:c,text:`${t.context.workflow}`,unfurl_links:!1,blocks:[{block_id:"info",type:"context",elements:r.map(s=>({type:"mrkdwn",text:`*${s.label}*   
<${s.url}|${s.value}>`}))},{block_id:"divider",type:"divider"}]});if(!l.ts)throw new Error("Did not get slack ts");o.saveState("slack-ts",l.ts),console.log(JSON.stringify(l,null,2))}else throw new Error("missing input slack-ts or channel-id")}_().catch(e=>{o.error(`ksmithut/slack-stream-action: ${f.format(e)}`)});export{_ as run};
